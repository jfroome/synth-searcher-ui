@page "/fetchdata"
@inject HttpClient Http;
@using SynthSearcherUI.Client.Shared

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (Listings == null)
{
    <p><em>Loading...</em></p>
}
else if (ErrMsg != null){
    <p><em>@ErrMsg</em></p>
}
else
{
    <div>@Listings.ToString()</div>
    @* <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @* @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            } 
            
        </tbody>
    </table> *@
}

@code {
    private List<Listing> Listings;
    private string ErrMsg = null;

    protected override async Task OnInitializedAsync()
    {
        try{
            Listings = new List<Listing>();
            Http.BaseAddress = new Uri("http://localhost:3000/");
            var response = await Http.GetAsync("api/get"); 

            var listOfListings = System.Text.Json.JsonSerializer.Deserialize<List<Listing>>(response.Content.ToString());
            Listings.AddRange(listOfListings);

            //forecasts = System.Text.Json.JsonSerializer.Serialize(response); 
        }
        catch(Exception e){
            
             ErrMsg = e.Message;
        }
    }
}
